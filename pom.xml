<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.3.3</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.desafio</groupId>
	<artifactId>backend</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>backend</name>
	<description>Projeto que realiza a gerência de estacionamento de carros e motos</description>
	<url/>
	<licenses>
		<license/>
	</licenses>
	<developers>
		<developer/>
	</developers>
	<scm>
		<connection/>
		<developerConnection/>
		<tag/>
		<url/>
	</scm>
	<properties>
		<java.version>17</java.version>
		<springdoc.version>2.6.0</springdoc.version>
	</properties>
	<dependencies>

		<!-- simplifica o acesso a DBs Relacionais -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<!-- Ajuda a realizar validação dos campos -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

		<!-- auxilia no desenvolvimento de API Rest -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- dimonui a verbosidade do código -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>

		<!-- banco de dados em memória para testes -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- banco de dados em memória para testes -->
<!--		<dependency>-->
<!--			<groupId>com.h2database</groupId>-->
<!--			<artifactId>h2</artifactId>-->
<!--			<scope>runtime</scope>-->
<!--		</dependency>-->

		<!-- auxiliando desenvolvimento de forma mais ágil -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>

		<!-- está auxiliando na serialização das respostas paginadas -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-hateoas</artifactId>
		</dependency>

		<!-- está dando suporte a respostas XML -->
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-xml</artifactId>
		</dependency>

		<!-- está realizando a documentação da aplicação -->
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
			<version>${springdoc.version}</version>
		</dependency>

		<!-- fornece conexão com PostgreSQL -->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- permite configurações das variáveis de Ambiente-->
		<dependency>
			<groupId>io.github.cdimascio</groupId>
			<artifactId>java-dotenv</artifactId>
			<version>5.2.2</version>
		</dependency>

		<!-- permite rodar múltipos containers -->
<!--		<dependency>-->
<!--			<groupId>org.springframework.boot</groupId>-->
<!--			<artifactId>spring-boot-docker-compose</artifactId>-->
<!--			<scope>runtime</scope>-->
<!--			<optional>true</optional>-->
<!--		</dependency>-->

		<!-- para gerar o token e pegar seu conteúdo -->
		<dependency>
			<groupId>com.auth0</groupId>
			<artifactId>java-jwt</artifactId>
			<version>4.4.0</version>
		</dependency>

<!--		&lt;!&ndash; para gerar o token e pegar seu conteúdo - API &ndash;&gt;-->
<!--		<dependency>-->
<!--			<groupId>io.jsonwebtoken</groupId>-->
<!--			<artifactId>jjwt-api</artifactId>-->
<!--			<version>0.12.5</version>-->
<!--		</dependency>-->

<!--		&lt;!&ndash; para gerar o token e pegar seu conteúdo - Implementação da API acima &ndash;&gt;-->
<!--		<dependency>-->
<!--			<groupId>io.jsonwebtoken</groupId>-->
<!--			<artifactId>jjwt-impl</artifactId>-->
<!--			<version>0.12.5</version>-->
<!--			<scope>runtime</scope>-->
<!--		</dependency>-->

<!--		&lt;!&ndash; Usado para conversão das dependências JJWT &ndash;&gt;-->
<!--		<dependency>-->
<!--			<groupId>io.jsonwebtoken</groupId>-->
<!--			<artifactId>jjwt-jackson</artifactId>-->
<!--			<version>0.12.5</version>-->
<!--			<scope>runtime</scope>-->
<!--		</dependency>-->


		<!-- para implementar autenticação e autorização  -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

		<!-- Adiciona suporte específico para PostgreSQL -->
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-database-postgresql</artifactId>
			<version>10.18.0</version>
			<scope>runtime</scope>
		</dependency>

		<!-- Dependência principal para lógica de migração -->
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
		</dependency>


	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
